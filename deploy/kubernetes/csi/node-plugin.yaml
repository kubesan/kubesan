# SPDX-License-Identifier: Apache-2.0

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: csi-node-plugin
  namespace: kubesan-system

---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: csi-node-plugin
  namespace: kubesan-system
spec:
  selector:
    matchLabels: &labels
      kubesan.gitlab.io/component: csi-node-plugin
  template:
    metadata:
      labels: *labels
      annotations:
        kubectl.kubernetes.io/default-container: csi-plugin
    spec:
      serviceAccountName: csi-node-plugin
      containers:
        - name: csi-plugin
          image: quay.io/kubesan/kubesan:v0.5.1
          args:
            - csi-node-plugin
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: WATCH_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          volumeMounts:
            - name: kubelet-dir
              mountPropagation: Bidirectional # for Filesystem volume mounting
              mountPath: /var/lib/kubelet
            - name: socket-dir
              mountPath: /run/csi
            - name: dev
              mountPath: /dev
            - name: run-kubesan-nbd
              mountPath: /run/kubesan/nbd
          securityContext:
            privileged: true
          # TODO(user): Configure the resources accordingly based on the project requirements.
          # More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
          resources:
            limits:
              cpu: 500m
              memory: 128Mi
            requests:
              cpu: 10m
              memory: 64Mi
        - name: node-driver-registrar
          image: registry.k8s.io/sig-storage/csi-node-driver-registrar:v2.8.0
          args:
            - --kubelet-registration-path=/var/lib/kubelet/plugins/kubesan-node/socket
          volumeMounts:
            - name: registration-dir
              mountPath: /registration
            - name: socket-dir
              mountPath: /run/csi
          # TODO(user): Configure the resources accordingly based on the project requirements.
          # More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
          resources:
            limits:
              cpu: 500m
              memory: 128Mi
            requests:
              cpu: 10m
              memory: 64Mi
      volumes:
        # where kubelet wants volumes to be staged/published
        - name: kubelet-dir
          hostPath:
            path: /var/lib/kubelet
            type: Directory
        # where node-driver-registrar registers the plugin with kubelet
        - name: registration-dir
          hostPath:
            path: /var/lib/kubelet/plugins_registry
            type: Directory
        # where the socket for kubelet <-> plugin communication is created
        - name: socket-dir
          hostPath:
            path: /var/lib/kubelet/plugins/kubesan-node
            type: DirectoryOrCreate
        - name: dev
          hostPath:
            path: /dev
            type: Directory
        - name: run-kubesan-nbd
          hostPath:
            path: /run/kubesan/nbd
            type: DirectoryOrCreate
