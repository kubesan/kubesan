# SPDX-License-Identifier: Apache-2.0

---
# used by package internal/csi/controller
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubesan-csi-controller
  namespace: kubesan-system
rules:
  - apiGroups: [kubesan.gitlab.io]
    resources: [volumes]
    verbs: [get, list, watch, create, update, delete]
  - apiGroups: [kubesan.gitlab.io]
    resources: [snapshots]
    verbs: [get, list, watch, create, delete]

---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubesan-csi-controller
  namespace: kubesan-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kubesan-csi-controller
subjects:
  - kind: ServiceAccount
    name: csi-controller-plugin
    namespace: kubesan-system

---
# used by image registry.k8s.io/sig-storage/csi-provisioner
# See https://github.com/kubernetes-csi/external-provisioner/blob/master/deploy/kubernetes/rbac.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubesan-csi-provisioner
rules:
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "create", "patch", "delete"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["list", "watch", "create", "update", "patch"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshots"]
    verbs: ["get", "list"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshotcontents"]
    verbs: ["get", "list"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["csinodes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["gateway.networking.k8s.io"]
    resources: ["referencegrants"]
    verbs: ["get", "list", "watch"]

---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubesan-csi-provisioner
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubesan-csi-provisioner
subjects:
  - kind: ServiceAccount
    name: csi-controller-plugin
    namespace: kubesan-system

---
# used by image registry.k8s.io/sig-storage/csi-snapshotter
# See https://github.com/kubernetes-csi/external-snapshotter/blob/master/deploy/kubernetes/csi-snapshotter/rbac-csi-snapshotter.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubesan-csi-snapshotter
rules:
  - apiGroups: [""]
    resources: [events]
    verbs: [list, watch, create, update, patch]
  - apiGroups: [snapshot.storage.k8s.io]
    resources: [volumesnapshotclasses]
    verbs: [get, list, watch]
  - apiGroups: [snapshot.storage.k8s.io]
    resources: [volumesnapshotcontents]
    verbs: [get, list, watch, update, patch]
  - apiGroups: [snapshot.storage.k8s.io]
    resources: [volumesnapshotcontents/status]
    verbs: [update, patch]
  - apiGroups: ["groupsnapshot.storage.k8s.io"]
    resources: ["volumegroupsnapshotclasses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["groupsnapshot.storage.k8s.io"]
    resources: ["volumegroupsnapshotcontents"]
    verbs: ["get", "list", "watch", "update", "patch"]
  - apiGroups: ["groupsnapshot.storage.k8s.io"]
    resources: ["volumegroupsnapshotcontents/status"]
    verbs: ["update", "patch"]

---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubesan-csi-snapshotter
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubesan-csi-snapshotter
subjects:
  - kind: ServiceAccount
    name: csi-controller-plugin
    namespace: kubesan-system

---
# Used by image registry.k8s.io/sig-storage/csi-external-health-monitor-controller
# See https://github.com/kubernetes-csi/external-health-monitor/blob/master/deploy/kubernetes/external-health-monitor-controller/rbac.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubesan-csi-health-monitor
rules:
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["get", "list", "watch", "create", "patch"]

---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubesan-csi-health-monitor
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubesan-csi-health-monitor
subjects:
  - kind: ServiceAccount
    name: csi-controller-plugin
    namespace: kubesan-system

---
# used by image k8s.gcr.io/sig-storage/csi-resizer
# See https://github.com/kubernetes-csi/external-resizer/blob/master/deploy/kubernetes/rbac.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubesan-csi-resizer
rules:
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "patch"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims/status"]
    verbs: ["patch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["list", "watch", "create", "update", "patch"]

---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubesan-csi-resizer
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubesan-csi-resizer
subjects:
  - kind: ServiceAccount
    name: csi-controller-plugin
    namespace: kubesan-system

---
# used by package internal/csi/node
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubesan-csi-node
  namespace: kubesan-system
rules:
  - apiGroups: [kubesan.gitlab.io]
    resources: [volumes]
    verbs: [get, list, watch, update, patch]

---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubesan-csi-node
  namespace: kubesan-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kubesan-csi-node
subjects:
  - kind: ServiceAccount
    name: csi-node-plugin
    namespace: kubesan-system
